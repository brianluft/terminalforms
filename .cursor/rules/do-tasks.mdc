---
description:
globs:
alwaysApply: false
---
Carefully follow this process step by step.

1. Run the build with `scripts/build.sh` with 600 second timeout.
2. Choose the tasks you intend to perform.
    - If the user's prompt includes a task assignment, then do that.
    - If there are any errors or warnings, then your assigned task is to fix that.
    - If the build succeeded, read the file `project/TASKS.md`. Your assignment is the next unchecked task. You may do multiple consecutive related tasks at once if it makes sense. Choose the tasks you intend to perform ahead of time and stick to those tasks ONLY.
3. Run `git log --oneline | head -n 10` to understand our recent activity.
4. Perform the chosen tasks to completion.
5. Run `scripts/build.sh` again to confirm with 600 second timeout.
6. Re-read `.cursor/rules/do-tasks.mdc` (this file) so you don't forget to finish these steps.
7. If everything is good, format the code with `scripts/format.sh`.
8. Update `project/TASKS.md` to check off the tasks you completed. Insert a sub bullet point under the completed task, italicized and starting with ðŸ¤–, to briefly explain how you did it and any details that you can see will be necessary for future tasks in the file.
9. Review `git status`.
10. Commit all to git with a short one-line, one-sentence commit message. Don't leave any uncommitted changes in the local worktree.
11. STOP. You must give me an opportunity to review. Do not start more tasks.

The tasks are expected to be doable. If you run into serious problems, STOP and ask for help.
