<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageId>TerminalForms</PackageId>
    <Version>0.0.1</Version>
    <Authors>Brian Luft</Authors>
    <Description>Terminal user interface library.</Description>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- CI passes -p:PackAssetsDir=/abs/path/to/pack-assets -->
    <PackAssetsDir Condition="'$(PackAssetsDir)' == ''"
      >$(MSBuildProjectDirectory)\..\..\pack-assets</PackAssetsDir
    >
  </PropertyGroup>
  <!-- Compute runtime identifier for native library packaging -->
  <PropertyGroup>
    <NativeLibraryOS Condition="$([MSBuild]::IsOSPlatform('Windows'))">win</NativeLibraryOS>
    <NativeLibraryOS Condition="$([MSBuild]::IsOSPlatform('Linux'))">linux</NativeLibraryOS>
    <NativeLibraryOS Condition="$([MSBuild]::IsOSPlatform('OSX'))">osx</NativeLibraryOS>
    <!-- Platform-specific native library names -->
    <NativeLibraryName Condition="'$(NativeLibraryOS)' == 'win'">tfcore.dll</NativeLibraryName>
    <NativeLibraryName Condition="'$(NativeLibraryOS)' == 'linux'">libtfcore.so</NativeLibraryName>
    <NativeLibraryName Condition="'$(NativeLibraryOS)' == 'osx'">libtfcore.dylib</NativeLibraryName>
    <!-- Platform-specific path to the native library build output -->
    <NativeLibraryPath Condition="'$(NativeLibraryOS)' == 'win'"
      >..\..\build\native-artifacts\tfcore\bin\$(Configuration)</NativeLibraryPath
    >
    <NativeLibraryPath Condition="'$(NativeLibraryOS)' == 'linux'"
      >..\..\build\native-artifacts\tfcore\bin</NativeLibraryPath
    >
    <NativeLibraryPath Condition="'$(NativeLibraryOS)' == 'osx'"
      >..\..\build\native-artifacts\tfcore\bin</NativeLibraryPath
    >
  </PropertyGroup>
  <!-- Include native library for both project references and NuGet package -->
  <ItemGroup>
    <Content Include="$(MSBuildThisFileDirectory)$(NativeLibraryPath)\$(NativeLibraryName)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\$(RuntimeIdentifier)\native\$(NativeLibraryName)</PackagePath>
      <Pack>true</Pack>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>
  <!-- Include staged native assets, preserving runtimes/* paths -->
  <ItemGroup Condition="Exists('$(PackAssetsDir)')">
    <None Include="$(PackAssetsDir)\runtimes\**\*" Pack="true" PackagePath="\" />
    <!-- empty => keep relative paths -->
  </ItemGroup>
</Project>
